package main

import (
    "encoding/base64"
    "encoding/json"
    "fmt"
    "net/http"
    "net/url"
    "strings"
)

func main() {
    http.HandleFunc("/", indexHandler)
    http.HandleFunc("/track/sdm", sdmHandler)
    http.HandleFunc("/album/jul", julHandler)
    http.Handle("/static/", http.StripPrefix("/static/", http.FileServer(http.Dir("static"))))
    
    clientID := "f8c2381642804263bad0bd71f3ba19c8"
    clientSecret := "cfda2e7b352d4b30883a2c430e626e31"

    authOptions := url.Values{}
    authOptions.Set("grant_type", "client_credentials")

    req, err := http.NewRequest("POST", "https://accounts.spotify.com/api/token", strings.NewReader(authOptions.Encode()))
    if err != nil {
        fmt.Println("Error creating request:", err)
        return
    }

    req.Header.Add("Content-Type", "application/x-www-form-urlencoded")

    client := &http.Client{}
    resp, err := client.Do(req)
    if err != nil {
        fmt.Println("Error sending request:", err)
        return
    }
    defer resp.Body.Close()

    var body struct {
        AccessToken string json:"access_token"
    }

    err = json.NewDecoder(resp.Body).Decode(&body)
    if err != nil {
        fmt.Println("Error decoding response:", err)
        return
    }

    token := body.AccessToken
    fmt.Println(token)
}